Version used in h2 server is h2-1.3.172.jar and the one used in WLP is h2-1.4.189.jar
Using h2-1.3.172.jar in liberty to connect to h2-1.3.172.jar running server, does NOT work!

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
wlp\usr\servers\test\apps\expanded\JEE.ear\jee.war\WEB-INF\classes\META-INF\persistence.xml
	
	<persistence xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				 xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
				 version="2.0" xmlns="http://java.sun.com/xml/ns/persistence">

		<persistence-unit name="test" transaction-type="JTA">
			<jta-data-source>jdbc/h2</jta-data-source>
			<properties>
				<property name="eclipselink.ddl-generation" value="create-tables"/>
			</properties>
		</persistence-unit>

	</persistence>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
wlp\usr\servers\test\server.xml

  <dataSource id="DefaultDataSource" jndiName="jdbc/h2" type="javax.sql.DataSource">
    <jdbcDriver libraryRef="H2_JAR" 
		javax.sql.ConnectionPoolDataSource="org.h2.jdbcx.JdbcDataSource" 
		javax.sql.DataSource="org.h2.jdbcx.JdbcDataSource" 
		javax.sql.XADataSource="org.h2.jdbcx.JdbcDataSource" />
		
    <properties URL="jdbc:h2:tcp://localhost:8090/mem:test" user="test" password="test" databaseName="test" />
  </dataSource>

  <library id="H2_JAR">
    <fileset dir="${shared.resource.dir}/h2" />
  </library>	

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

@Stateless
public class UserService {

    @PersistenceContext(unitName = "test")
    private EntityManager em;

    public List<User> listAll() {
        return em.createQuery("SELECT u from User as u").getResultList();
    }
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	